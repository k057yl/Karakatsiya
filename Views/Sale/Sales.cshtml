@model IEnumerable<Karakatsiya.Models.Entities.Sale>
@inject Karakatsiya.Localizations.SharedLocalizationService sharedLocalizer

<div class="dropdown">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="filterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
        @sharedLocalizer.Buttons["Filter"]
    </button>
    <ul class="dropdown-menu" aria-labelledby="filterDropdown">
        <li>
            <form method="get">
                <div class="row p-3">
                    <div class="col-md-6">
                        <label for="startDate">@sharedLocalizer.Buttons["Filter.StartDate"]</label>
                        <input type="date" id="startDate" name="startDate" class="form-control" value="@ViewData["StartDate"]" />
                    </div>
                    <div class="col-md-6">
                        <label for="endDate">@sharedLocalizer.Buttons["Filter.EndDate"]</label>
                        <input type="date" id="endDate" name="endDate" class="form-control" value="@ViewData["EndDate"]" />
                    </div>
                </div>
                <div class="d-flex justify-content-between p-3">
                    <button type="submit" class="btn btn-primary">@sharedLocalizer.Buttons["Filter"]</button>
                    <a href="@Url.Action("Sales")" class="btn btn-outline-secondary">@sharedLocalizer.Buttons["Filter.ResetFilter"]</a>
                </div>
            </form>
        </li>
    </ul>
</div>

<div class="sale-test">
    <table class="table">
        <thead>
            <tr>
                <th>@sharedLocalizer.Tables["Image"]</th>
                <th>@sharedLocalizer.Tables["Name"]</th>
                <th>@sharedLocalizer.Tables["SaleDate"]</th>
                <th>@sharedLocalizer.Tables["SoldPrice"]</th>
                <th>@sharedLocalizer.Tables["Profit"]</th>
                <th>@sharedLocalizer.Tables["Actions"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var sale in Model)
            {
                <tr>
                    <td class="center-content">
                        @if (!string.IsNullOrEmpty(sale.ItemImagePath))
                        {
                            <div class="photo-container">
                                <img src="@sale.ItemImagePath" alt="Image" class="item-photo" />
                                <span class="creation-date">@sale.ItemCreationDate?.ToShortDateString()</span>
                            </div>
                        }
                        else
                        {
                            <span>@sharedLocalizer.Messages["NoImage"]</span>
                        }
                    </td>
                    <td>@sale.ItemName</td>
                    <td>@sale.SaleDate.ToShortDateString()</td>
                    <td>@sale.SalePrice @sale.Currency</td>
                    <td>@sale.Profit @sale.Currency</td>
                    <td>
                        <button type="button" class="btn btn-danger delete-sale-btn" data-saleid="@sale.SaleId">
                            @sharedLocalizer.Buttons["Delete"]
                        </button>
                        @*
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal" data-saleid="@sale.SaleId">
                            @sharedLocalizer.Buttons["Delete"]
                        </button>
                        *@
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Кастомное модальное окно -->
<div id="customConfirmDeleteModal" class="custom-modal" role="dialog" aria-labelledby="confirmDeleteLabel" aria-hidden="true">
    <div class="custom-modal-dialog">
        <div class="custom-modal-content">
            <div class="custom-modal-header">
                <h5 class="custom-modal-title" id="confirmDeleteLabel">@sharedLocalizer.Messages["DeleteTitle"]</h5>
                <button type="button" class="btn-close" id="closeModalButton" aria-label="Close"></button>
            </div>
            <div class="custom-modal-body">
                @sharedLocalizer.Messages["DeletionConfirmation"]
            </div>
            <div class="custom-modal-footer">
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">@sharedLocalizer.Buttons["Yes"]</button>
                <button type="button" class="btn btn-secondary" id="cancelDeleteButton">@sharedLocalizer.Buttons["No"]</button>
            </div>
        </div>
    </div>
</div>

<!-- Затемнение фона -->
<div id="customModalBackdrop" class="custom-modal-backdrop"></div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const deleteButtons = document.querySelectorAll(".delete-sale-btn");
            const modal = document.getElementById("customConfirmDeleteModal");
            const modalBackdrop = document.getElementById("customModalBackdrop");
            const confirmDeleteButton = document.getElementById("confirmDeleteButton");
            const cancelDeleteButton = document.getElementById("cancelDeleteButton");

            let saleIdToDelete = null;

            // Открытие модального окна
            deleteButtons.forEach(button => {
                button.addEventListener("click", function () {
                    saleIdToDelete = button.getAttribute("data-saleid");

                    modal.style.display = "block";
                    modalBackdrop.style.display = "block";
                });
            });

            // Закрытие модального окна
            cancelDeleteButton.addEventListener("click", function () {
                modal.style.display = "none";
                modalBackdrop.style.display = "none";
            });

            // Удаление продажи при подтверждении
            confirmDeleteButton.addEventListener("click", function () {
                if (saleIdToDelete) {
                    fetch(`/Sale/DeleteSale?saleId=${saleIdToDelete}`, { method: "POST" })
                        .then(() => location.reload());
                }
            });

            // Закрытие окна при клике на затемненный фон
            modalBackdrop.addEventListener("click", function () {
                modal.style.display = "none";
                modalBackdrop.style.display = "none";
            });
        });
    </script>
}