@model List<Karakatsiya.Models.Entities.Item>

@inject Karakatsiya.Localizations.SharedLocalizationService sharedLocalizer

@{
    ViewData["Title"] = "My Items";
}

<h2>@ViewData["Title"]</h2>

<div class="filter-header d-flex align-items-center gap-2 mb-3">
    <button class="filter-toggle-btn btn btn-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse">
        🔍 Фильтры
    </button>

    <div class="collapse" id="filterCollapse">
        <div class="filter-block">
            <form method="get" asp-action="UserItems" asp-controller="Item">
                <input type="hidden" name="sortOrder" value="@ViewData["SortOrder"]" />
                <div class="filter-form">
                    <div class="filter-group">
                        <label for="name">Название</label>
                        <input type="text" id="name" name="name" value="@ViewData["Name"]" />
                    </div>

                    <div class="filter-group">
                        <label for="minPrice">Мин. цена</label>
                        <input type="number" id="minPrice" name="minPrice" value="@ViewData["MinPrice"]" />
                    </div>

                    <div class="filter-group">
                        <label for="maxPrice">Макс. цена</label>
                        <input type="number" id="maxPrice" name="maxPrice" value="@ViewData["MaxPrice"]" />
                    </div>

                    <div class="filter-group">
                        <label for="createdAfter">Создано после</label>
                        <input type="date" id="createdAfter" name="createdAfter" value="@ViewData["CreatedAfter"]" />
                    </div>

                    <div class="filter-group">
                        <label for="createdBefore">Создано до</label>
                        <input type="date" id="createdBefore" name="createdBefore" value="@ViewData["CreatedBefore"]" />
                    </div>
                </div>

                <div class="filter-buttons">
                    <div class="sold-checkbox">
                        <input type="checkbox" id="includeSold" name="IncludeSold" value="true" @(ViewData["IncludeSold"] as bool? == true ? "checked" : "") />
                        <label for="includeSold">Проданные</label>
                    </div>

                    <button type="submit" class="apply-btn">Применить</button>
                    <a href="@Url.Action("UserItems", "Item")" class="reset-btn">Сбросить фильтры</a>
                </div>
            </form>
        </div>
    </div>

    <form method="get" asp-action="UserItems" asp-controller="Item" class="d-inline">
        <label for="sortOrder" class="me-1">Сортировка</label>
        @{
            var sortOrder = ViewData["SortOrder"] as string;
        }
        <select id="sortOrder" name="sortOrder" onchange="this.form.submit()" class="form-select d-inline w-auto">
            <option value="az" selected="@(sortOrder == "az")">A-Z</option>
            <option value="za" selected="@(sortOrder == "za")">Z-A</option>
            <option value="price_asc" selected="@(sortOrder == "price_asc")">Цена ↑</option>
            <option value="price_desc" selected="@(sortOrder == "price_desc")">Цена ↓</option>
        </select>
    </form>
</div>

<div class="item-container">
    <table class="table">
        <thead>
            <tr>
                <th>@sharedLocalizer.Tables["Image"]</th>
                <th>@sharedLocalizer.Tables["Name"]</th>
                <th>@sharedLocalizer.Tables["Description"]</th>
                <th>@sharedLocalizer.Tables["CreateDate"]</th>
                <th>@sharedLocalizer.Tables["ExpirationDate"]</th>
                <th>@sharedLocalizer.Tables["Price"]</th>
                <th>@sharedLocalizer.Tables["Category"]</th>
                <th>@sharedLocalizer.Tables["Actions"]</th>
                <th>@sharedLocalizer.Tables["Actions"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var daysToExpiration = item.ExpirationDate.HasValue
                ? (item.ExpirationDate.Value - DateTime.Now).TotalDays
                : double.MaxValue;

                var isExpiringSoon = !item.IsSold && daysToExpiration <= 7;
                var isExpired = !item.IsSold && item.ExpirationDate.HasValue && item.ExpirationDate.Value < DateTime.Now;

                <tr class="@(isExpired ? "expired" : isExpiringSoon ? "expiring-soon" : "")">
                    <td>
                        @if (item.ImagePaths.Any())
                        {
                            var mainImage = item.MainImage ?? item.ImagePaths.FirstOrDefault();

                            <a href="@Url.Action("Details", "Item", new { id = item.ItemId })">
                                <img src="@mainImage" alt="Image" style="max-width: 100px; max-height: 100px;" />
                            </a>
                        }
                        else
                        {
                            <span>@sharedLocalizer.Messages["NoImage"]</span>
                        }
                    </td>
                    <td>@item.Name</td>
                    <td>
                        @if (item.Description.Length > 30)
                        {
                            @foreach (var line in System.Text.RegularExpressions.Regex.Matches(item.Description, ".{1,30}"))
                            {
                                <div>@line</div>
                            }
                        }
                        else
                        {
                            @item.Description
                        }
                    </td>
                    <td>@item.CreationDate.ToShortDateString()</td>
                    <td>
                        @if (item.ExpirationDate == null || item.ExpirationDate == new DateTime(2099, 12, 31))
                        {
                            @sharedLocalizer.Messages["Table.Field.NoExperationDate"]
                        }
                        else
                        {
                            @item.ExpirationDate?.ToShortDateString()
                        }
                    </td>
                    <td>@item.Price @item.Currency</td>
                    <td>@item.Category</td>
                    <td>
                        @if (!item.IsSold)
                        {
                            <a asp-action="Edit" asp-controller="Item" asp-route-id="@item.ItemId" class="btn btn-secondary me-2">
                                @sharedLocalizer.Buttons["Edit"]
                            </a>
                        }
                        <button type="button" class="btn btn-danger open-modal-btn"
                                data-action="/Item/Delete"
                                data-id="@item.ItemId"
                                data-title="@sharedLocalizer.Buttons["DeleteTitle"]"
                                data-message="@sharedLocalizer.Buttons["DeletionConfirmation"]">
                            @sharedLocalizer.Buttons["Delete"]
                        </button>
                        @*
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal" data-itemid="@item.ItemId">
                            @sharedLocalizer.Buttons["Delete"]
                        </button>
                        *@
                    </td>
                    <td>
                        @if (item.IsSold)
                        {
                            <span>@sharedLocalizer.Buttons["Sold"]</span>
                        }
                        else
                        {
                            <form asp-action="SellItem" asp-controller="Sale" method="post">
                                <input type="hidden" name="itemId" value="@item.ItemId" />
                                <input type="number" name="salePrice" placeholder=@sharedLocalizer.Buttons["SoldPrice"] required />
                                <button type="submit" class="btn btn-success">@sharedLocalizer.Buttons["Sell"]</button>
                            </form>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>



@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    @await Html.PartialAsync("_CustomModal")
}