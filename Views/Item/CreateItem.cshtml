@model Karakatsiya.Models.DTOs.CreateItemDto
@inject Karakatsiya.Localizations.SharedLocalizationService localizer
@inject Karakatsiya.Services.CategoryLocalizationService categoryLocalizationService
@inject Karakatsiya.Services.CurrencyLocalizationService currencyLocalizationService

@{
    ViewData["Title"] = localizer.Pages["CreatePage.Greetings"];
    var mainImageText = localizer.Messages["Modal.MainTextMini"];
    var mainImageTextButton = localizer.Buttons["Create.Modal.SetAsMain"];
}

<p class="greeting-text">@ViewData["Title"]</p>

<form asp-action="CreateItem" method="post" enctype="multipart/form-data" class="create-item-form__container">
    <div class="form-group create-item-form__group">
        <label asp-for="Name" class="control-label create-item-form__label"></label>
        <input asp-for="Name" class="form-control create-item-form__input" placeholder="@localizer.Fields["Name"]"/>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group create-item-form__group">
        <label class="control-label create-item-form__label">
            <input type="checkbox" id="ShowExpirationDateCheckbox" />
            @localizer.Buttons["ShowExperationDate"]
        </label>
        <div id="expirationDateContainer" style="display:none;">
            <label asp-for="ExpirationDate" class="control-label create-item-form__label">@localizer.Buttons["ExpirationDate"]</label>
            <input asp-for="ExpirationDate" class="form-control create-item-form__input" placeholder="@localizer.Fields["ExpirationDate"]"/>
            <span asp-validation-for="ExpirationDate" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group create-item-form__group">
        <label asp-for="Description" class="control-label create-item-form__label"></label>
        <textarea asp-for="Description" class="form-control create-item-form__textarea" placeholder="@localizer.Fields["Description"]"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group create-item-form__group">
        <label asp-for="Price" class="control-label create-item-form__label"></label>
        <input asp-for="Price" type="number" step="0.01" class="form-control create-item-form__input" placeholder="@localizer.Fields["Price"]" value="" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="CategoryId" class="control-label"></label>
        <select asp-for="CategoryId" class="form-control" asp-items="Model.Categories">
            <option value="">@localizer.Categories["SelectCategory"]</option>
        </select>
        <span asp-validation-for="CategoryId" class="text-danger"></span>
    </div>

    <div class="form-group create-item-form__group">
        <label asp-for="Currency" class="control-label create-item-form__label">@localizer.Buttons["Currency"]</label>
        <select asp-for="Currency" class="form-control create-item-form__select">
            @foreach (var currency in currencyLocalizationService.GetLocalizedCurrencies())
            {
                <option value="@currency.Key">@currency.Value</option>
            }
        </select>
        <span asp-validation-for="Currency" class="text-danger"></span>
    </div>

    <div class="form-group mt-3 create-item-form__group">
        <div id="selectedImages" class="d-flex flex-wrap">
        </div>
    </div>

    <div class="form-group create-item-form__group">
        <button type="button" class="btn btn-info create-item-form__button" data-bs-toggle="modal" data-bs-target="#imageModal">
            @localizer.Buttons["Create.UploadImage"]
        </button>
    </div>

    <input type="hidden" asp-for="MainImage" id="MainImage" />
    <input type="hidden" name="ImagePathsJson" id="ImagePathsJson" />


    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <button type="submit" class="btn btn-primary create-item-form__submit">@localizer.Buttons["Create.CreateItem"]</button>

    <!-- Модальное окно для загрузки изображений -->
    <div class="modal fade" id="imageModal" data-bs-backdrop="false" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="imageModalLabel">@localizer.Buttons["Create.Modal.DownloadImages"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="modalImageFiles">@localizer.Buttons["Create.Modal.SelectImages"]</label>
                        <input type="file" id="modalImageFiles" name="ImageFiles" accept="image/*" multiple class="form-control" />
                    </div>
                    <div class="form-group">
                        <label id="imagePreviewLabel" style="display: none;">@localizer.Messages["Modal.SelectMainImage"]</label>
                        <div id="imagePreview" class="d-flex flex-wrap"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="saveImagesBtn" class="btn btn-success">@localizer.Buttons["Create.Modal.SaveImages"]</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@localizer.Buttons["Create.Modal.Close"]</button>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        $(document).ready(function(){
            let selectedMainImage = null;
            let imagePaths = [];

            function updateImagePreview(files) {
                $('#imagePreview').empty();
                imagePaths = [];
                selectedMainImage = null;

                Array.from(files).forEach(file => {
                    let reader = new FileReader();
                    reader.onload = function(e) {
                        const previewDiv = $('<div class="m-2 position-relative" style="width:120px; height:120px; border:1px solid #ccc; cursor:pointer;"></div>');
                        const img = $('<img src="'+e.target.result+'" style="width:100%; height:100%; object-fit:cover;" />');
                        previewDiv.append(img);
                        const mainBtn = $('<button type="button" class="btn btn-sm btn-warning position-absolute" style="bottom:5px; left:5px;">' + '@mainImageTextButton' + '</button>');
                        previewDiv.append(mainBtn);

                        mainBtn.on('click', function(){
                            $('#imagePreview div').css('border', '1px solid #ccc');
                            previewDiv.css('border', '3px solid red');
                            selectedMainImage = '/images/' + file.name;
                        });

                        $('#imagePreview').append(previewDiv);
                        imagePaths.push('/images/' + file.name);
                    }
                    reader.readAsDataURL(file);
                });
            }

            $('#modalImageFiles').on('change', function(e){
                $('#imagePreviewLabel').toggle(e.target.files.length > 0);
                updateImagePreview(e.target.files);
            });

            $('#saveImagesBtn').on('click', function(){
                if(!selectedMainImage && imagePaths.length > 0){
                    selectedMainImage = imagePaths[0];
                }
                $('#MainImage').val(selectedMainImage);
                $('#ImagePathsJson').val(JSON.stringify(imagePaths));

                $('#selectedImages').empty();
                imagePaths.forEach(imagePath => {
                    const imageDiv = $('<div class="m-2 position-relative" style="width:100px; height:100px; border:1px solid #ccc;"></div>');
                    const img = $('<img src="'+imagePath+'" style="width:100%; height:100%; object-fit:cover;" />');
                    imageDiv.append(img);

                    if(imagePath === selectedMainImage) {
                        const mainTag = $('<span class="badge bg-danger position-absolute" style="top:5px; left:5px;">' + '@mainImageText' + '</span>');
                        imageDiv.append(mainTag);
                    }

                    $('#selectedImages').append(imageDiv);
                });

                $('#imageModal').modal('hide');
            });
        });
    </script>
}